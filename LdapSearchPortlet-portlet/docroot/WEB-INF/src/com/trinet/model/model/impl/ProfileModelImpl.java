/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trinet.model.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.trinet.model.model.Profile;
import com.trinet.model.model.ProfileModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Profile service. Represents a row in the &quot;userprofile_Profile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.trinet.model.model.ProfileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProfileImpl}.
 * </p>
 *
 * @author ronak.parekh
 * @see ProfileImpl
 * @see com.trinet.model.model.Profile
 * @see com.trinet.model.model.ProfileModel
 * @generated
 */
public class ProfileModelImpl extends BaseModelImpl<Profile>
	implements ProfileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a profile model instance should use the {@link com.trinet.model.model.Profile} interface instead.
	 */
	public static final String TABLE_NAME = "userprofile_Profile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "email", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "associateId", Types.BIGINT },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "summary", Types.VARCHAR },
			{ "yearOfExperience", Types.INTEGER },
			{ "experience", Types.VARCHAR },
			{ "primarySkills", Types.VARCHAR },
			{ "secondarySkills", Types.VARCHAR },
			{ "clientName", Types.VARCHAR },
			{ "education", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table userprofile_Profile (id_ LONG,email VARCHAR(75) not null primary key,userId LONG,associateId LONG,firstName VARCHAR(75) null,lastName VARCHAR(75) null,summary VARCHAR(2000) null,yearOfExperience INTEGER,experience VARCHAR(2000) null,primarySkills VARCHAR(2000) null,secondarySkills VARCHAR(2000) null,clientName VARCHAR(2000) null,education VARCHAR(2000) null)";
	public static final String TABLE_SQL_DROP = "drop table userprofile_Profile";
	public static final String ORDER_BY_JPQL = " ORDER BY profile.email ASC";
	public static final String ORDER_BY_SQL = " ORDER BY userprofile_Profile.email ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.trinet.model.model.Profile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.trinet.model.model.Profile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.trinet.model.model.Profile"),
			true);
	public static long EMAIL_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.trinet.model.model.Profile"));

	public ProfileModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _email;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setEmail(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _email;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Profile.class;
	}

	@Override
	public String getModelClassName() {
		return Profile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("email", getEmail());
		attributes.put("userId", getUserId());
		attributes.put("associateId", getAssociateId());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("summary", getSummary());
		attributes.put("yearOfExperience", getYearOfExperience());
		attributes.put("experience", getExperience());
		attributes.put("primarySkills", getPrimarySkills());
		attributes.put("secondarySkills", getSecondarySkills());
		attributes.put("clientName", getClientName());
		attributes.put("education", getEducation());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long associateId = (Long)attributes.get("associateId");

		if (associateId != null) {
			setAssociateId(associateId);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String summary = (String)attributes.get("summary");

		if (summary != null) {
			setSummary(summary);
		}

		Integer yearOfExperience = (Integer)attributes.get("yearOfExperience");

		if (yearOfExperience != null) {
			setYearOfExperience(yearOfExperience);
		}

		String experience = (String)attributes.get("experience");

		if (experience != null) {
			setExperience(experience);
		}

		String primarySkills = (String)attributes.get("primarySkills");

		if (primarySkills != null) {
			setPrimarySkills(primarySkills);
		}

		String secondarySkills = (String)attributes.get("secondarySkills");

		if (secondarySkills != null) {
			setSecondarySkills(secondarySkills);
		}

		String clientName = (String)attributes.get("clientName");

		if (clientName != null) {
			setClientName(clientName);
		}

		String education = (String)attributes.get("education");

		if (education != null) {
			setEducation(education);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_columnBitmask |= EMAIL_COLUMN_BITMASK;

		if (_originalEmail == null) {
			_originalEmail = _email;
		}

		_email = email;
	}

	public String getOriginalEmail() {
		return GetterUtil.getString(_originalEmail);
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public long getAssociateId() {
		return _associateId;
	}

	@Override
	public void setAssociateId(long associateId) {
		_associateId = associateId;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_firstName = firstName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public String getSummary() {
		if (_summary == null) {
			return StringPool.BLANK;
		}
		else {
			return _summary;
		}
	}

	@Override
	public void setSummary(String summary) {
		_summary = summary;
	}

	@Override
	public int getYearOfExperience() {
		return _yearOfExperience;
	}

	@Override
	public void setYearOfExperience(int yearOfExperience) {
		_yearOfExperience = yearOfExperience;
	}

	@Override
	public String getExperience() {
		if (_experience == null) {
			return StringPool.BLANK;
		}
		else {
			return _experience;
		}
	}

	@Override
	public void setExperience(String experience) {
		_experience = experience;
	}

	@Override
	public String getPrimarySkills() {
		if (_primarySkills == null) {
			return StringPool.BLANK;
		}
		else {
			return _primarySkills;
		}
	}

	@Override
	public void setPrimarySkills(String primarySkills) {
		_primarySkills = primarySkills;
	}

	@Override
	public String getSecondarySkills() {
		if (_secondarySkills == null) {
			return StringPool.BLANK;
		}
		else {
			return _secondarySkills;
		}
	}

	@Override
	public void setSecondarySkills(String secondarySkills) {
		_secondarySkills = secondarySkills;
	}

	@Override
	public String getClientName() {
		if (_clientName == null) {
			return StringPool.BLANK;
		}
		else {
			return _clientName;
		}
	}

	@Override
	public void setClientName(String clientName) {
		_clientName = clientName;
	}

	@Override
	public String getEducation() {
		if (_education == null) {
			return StringPool.BLANK;
		}
		else {
			return _education;
		}
	}

	@Override
	public void setEducation(String education) {
		_education = education;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Profile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Profile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProfileImpl profileImpl = new ProfileImpl();

		profileImpl.setId(getId());
		profileImpl.setEmail(getEmail());
		profileImpl.setUserId(getUserId());
		profileImpl.setAssociateId(getAssociateId());
		profileImpl.setFirstName(getFirstName());
		profileImpl.setLastName(getLastName());
		profileImpl.setSummary(getSummary());
		profileImpl.setYearOfExperience(getYearOfExperience());
		profileImpl.setExperience(getExperience());
		profileImpl.setPrimarySkills(getPrimarySkills());
		profileImpl.setSecondarySkills(getSecondarySkills());
		profileImpl.setClientName(getClientName());
		profileImpl.setEducation(getEducation());

		profileImpl.resetOriginalValues();

		return profileImpl;
	}

	@Override
	public int compareTo(Profile profile) {
		String primaryKey = profile.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Profile)) {
			return false;
		}

		Profile profile = (Profile)obj;

		String primaryKey = profile.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		ProfileModelImpl profileModelImpl = this;

		profileModelImpl._originalEmail = profileModelImpl._email;

		profileModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Profile> toCacheModel() {
		ProfileCacheModel profileCacheModel = new ProfileCacheModel();

		profileCacheModel.id = getId();

		profileCacheModel.email = getEmail();

		String email = profileCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			profileCacheModel.email = null;
		}

		profileCacheModel.userId = getUserId();

		profileCacheModel.associateId = getAssociateId();

		profileCacheModel.firstName = getFirstName();

		String firstName = profileCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			profileCacheModel.firstName = null;
		}

		profileCacheModel.lastName = getLastName();

		String lastName = profileCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			profileCacheModel.lastName = null;
		}

		profileCacheModel.summary = getSummary();

		String summary = profileCacheModel.summary;

		if ((summary != null) && (summary.length() == 0)) {
			profileCacheModel.summary = null;
		}

		profileCacheModel.yearOfExperience = getYearOfExperience();

		profileCacheModel.experience = getExperience();

		String experience = profileCacheModel.experience;

		if ((experience != null) && (experience.length() == 0)) {
			profileCacheModel.experience = null;
		}

		profileCacheModel.primarySkills = getPrimarySkills();

		String primarySkills = profileCacheModel.primarySkills;

		if ((primarySkills != null) && (primarySkills.length() == 0)) {
			profileCacheModel.primarySkills = null;
		}

		profileCacheModel.secondarySkills = getSecondarySkills();

		String secondarySkills = profileCacheModel.secondarySkills;

		if ((secondarySkills != null) && (secondarySkills.length() == 0)) {
			profileCacheModel.secondarySkills = null;
		}

		profileCacheModel.clientName = getClientName();

		String clientName = profileCacheModel.clientName;

		if ((clientName != null) && (clientName.length() == 0)) {
			profileCacheModel.clientName = null;
		}

		profileCacheModel.education = getEducation();

		String education = profileCacheModel.education;

		if ((education != null) && (education.length() == 0)) {
			profileCacheModel.education = null;
		}

		return profileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", associateId=");
		sb.append(getAssociateId());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", summary=");
		sb.append(getSummary());
		sb.append(", yearOfExperience=");
		sb.append(getYearOfExperience());
		sb.append(", experience=");
		sb.append(getExperience());
		sb.append(", primarySkills=");
		sb.append(getPrimarySkills());
		sb.append(", secondarySkills=");
		sb.append(getSecondarySkills());
		sb.append(", clientName=");
		sb.append(getClientName());
		sb.append(", education=");
		sb.append(getEducation());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.trinet.model.model.Profile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>associateId</column-name><column-value><![CDATA[");
		sb.append(getAssociateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>summary</column-name><column-value><![CDATA[");
		sb.append(getSummary());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yearOfExperience</column-name><column-value><![CDATA[");
		sb.append(getYearOfExperience());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>experience</column-name><column-value><![CDATA[");
		sb.append(getExperience());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primarySkills</column-name><column-value><![CDATA[");
		sb.append(getPrimarySkills());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondarySkills</column-name><column-value><![CDATA[");
		sb.append(getSecondarySkills());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clientName</column-name><column-value><![CDATA[");
		sb.append(getClientName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>education</column-name><column-value><![CDATA[");
		sb.append(getEducation());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Profile.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Profile.class
		};
	private long _id;
	private String _email;
	private String _originalEmail;
	private long _userId;
	private String _userUuid;
	private long _associateId;
	private String _firstName;
	private String _lastName;
	private String _summary;
	private int _yearOfExperience;
	private String _experience;
	private String _primarySkills;
	private String _secondarySkills;
	private String _clientName;
	private String _education;
	private long _columnBitmask;
	private Profile _escapedModel;
}